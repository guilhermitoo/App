create table usuarios
(
	id int not null primary key auto_increment,
	nome varchar(100) not null,
	email varchar(50) not null unique,
	senha varchar(50) not null
);

create table funcionarios
(
	id int not null primary key auto_increment,
	nome varchar(100) not null,
	rg varchar(12) not null unique,
	periodo char(1) not null,
	email varchar(50) not null unique,
	senha varchar(50) not null,
	CONSTRAINT chk_periodo CHECK( periodo in ('M','T','N'))
);


create table locais
(
	id int not null primary key auto_increment,
	nome varchar(50) not null
);

create table equipamentos
(
	id int not null primary key auto_increment,
	descricao varchar(50) not null,
	local_id int not null,
	CONSTRAINT fkLocal FOREIGN KEY (local_id) REFERENCES locais (id) ON UPDATE NO ACTION ON DELETE NO ACTION
);

create table chamados
(
	id int not null primary key auto_increment,
	descricao varchar(200) not null,
	data_inicio date not null,
	data_fim date,
	status int not null, -- 1 - pendente, 2 - realizado, 3 - cancelado
	usuario_id int not null,
	funcionario_id int,
	equipamento_id int not null,
	CONSTRAINT fkUsuario FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
	CONSTRAINT fkFuncionario FOREIGN KEY (funcionario_id) REFERENCES funcionarios(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
	CONSTRAINT fkEquipamento FOREIGN KEY (equipamento_id) REFERENCES equipamentos(id) ON UPDATE NO ACTION ON DELETE NO ACTION
);


-- código de criação do usuário

CREATE USER 'user'@'localhost' IDENTIFIED BY PASSWORD '*23AE809DDACAF96AF0FD78ED04B6A265E05AA257'; 
GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*23AE809DDACAF96AF0FD78ED04B6A265E05AA257'; 
GRANT ALL PRIVILEGES ON `appriori`.* TO 'user'@'localhost';

-- cria trigger de criptografia de funcionário

CREATE TRIGGER `tg_senha` BEFORE INSERT ON `funcionarios`
 FOR EACH ROW begin
declare senha varchar(32);
set senha = md5(new.senha);
set new.senha = senha;
end

-- cria trigger de criptografia de usuário

CREATE TRIGGER `tg_senha_usuario` BEFORE INSERT ON `usuarios` 
FOR EACH ROW begin 
declare senha varchar(32); 
set senha = md5(new.senha); 
set new.senha = senha; 
end

CREATE TRIGGER `tg_altera_senha` BEFORE UPDATE ON 
`usuarios` FOR EACH ROW begin 
declare senha varchar(32); 
	if (new.senha <> old.senha) then 
		set senha = md5(new.senha); 
		set new.senha = senha; 
	end if; 
end

-- inserindo um funcionário para acesso do sistema

INSERT INTO 'appriori'.'funcionarios' ( 'nome', 'rg', 'email', 'senha', 'periodo') VALUES ( 'Administrador', '1', 'admin@admin', 'admin', 'T');